#############################################################################
# Makefile for building: Server
# Generated by qmake (2.01a) (Qt 4.7.2) on: Mon May 14 03:31:51 2012
# Project:  Server.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile Server.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I. -IObjectManager -IMessageGenerator -IConnection -IParser -IKernel -ICommunicationController -IGeom -IUtilities -IWorldModel -Irelease/yacc_lex -IModel -IGIS -Irelease/moc
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtSql -lQtXml -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/objects/

####### Files

SOURCES       = main.cpp \
		ObjectManager/ObjectManager.cpp \
		ObjectManager/ObjectParameters.cpp \
		MessageGenerator/MessageGenerator.cpp \
		MessageGenerator/ServerMessage.cpp \
		Parser/Command.cpp \
		Kernel/Kernel.cpp \
		Model/attribute.cpp \
		Model/behavior.cpp \
		Model/model.cpp \
		CommunicationController/Tcp/ClientSocket.cpp \
		CommunicationController/TcpController.cpp \
		WorldModel/Object.cpp \
		WorldModel/WorldModel.cpp \
		Connection/Connection.cpp \
		WorldModel/Field.cpp \
		Utilities/CString.cpp \
		Utilities/SwarmException.cpp \
		Utilities/General.cpp \
		Geom/Vector3D.cpp \
		Geom/Geometry.cpp \
		GIS/MapSetParser.cpp \
		GIS/GISServer.cpp \
		GIS/DBServer.cpp \
		GIS/StandardsParser.cpp release/yacc_lex/CommandParser_yacc.cpp \
		release/yacc_lex/CommandParser_lex.cpp \
		release/moc/moc_Kernel.cpp \
		release/moc/moc_CommunicationController.cpp \
		release/moc/moc_ClientSocket.cpp \
		release/moc/moc_TcpController.cpp \
		release/moc/moc_Connection.cpp
OBJECTS       = release/objects/main.o \
		release/objects/ObjectManager.o \
		release/objects/ObjectParameters.o \
		release/objects/MessageGenerator.o \
		release/objects/ServerMessage.o \
		release/objects/Command.o \
		release/objects/Kernel.o \
		release/objects/attribute.o \
		release/objects/behavior.o \
		release/objects/model.o \
		release/objects/ClientSocket.o \
		release/objects/TcpController.o \
		release/objects/Object.o \
		release/objects/WorldModel.o \
		release/objects/Connection.o \
		release/objects/Field.o \
		release/objects/CString.o \
		release/objects/SwarmException.o \
		release/objects/General.o \
		release/objects/Vector3D.o \
		release/objects/Geometry.o \
		release/objects/MapSetParser.o \
		release/objects/GISServer.o \
		release/objects/DBServer.o \
		release/objects/StandardsParser.o \
		release/objects/CommandParser_yacc.o \
		release/objects/CommandParser_lex.o \
		release/objects/moc_Kernel.o \
		release/objects/moc_CommunicationController.o \
		release/objects/moc_ClientSocket.o \
		release/objects/moc_TcpController.o \
		release/objects/moc_Connection.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Server.pro
QMAKE_TARGET  = Server
DESTDIR       = 
TARGET        = Server

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Server.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtSql.prl \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile Server.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtSql.prl:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile Server.pro

dist: 
	@$(CHK_DIR_EXISTS) release/objects/Server1.0.0 || $(MKDIR) release/objects/Server1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/objects/Server1.0.0/ && $(COPY_FILE) --parents Parser/CommandParser.y release/objects/Server1.0.0/ && $(COPY_FILE) --parents Parser/CommandParser.l release/objects/Server1.0.0/ && $(COPY_FILE) --parents ObjectManager/ObjectManager.h ObjectManager/ObjectParameters.h Parser/Command.h Parser/CommandParser.h Kernel/Kernel.h CommunicationController/CommunicationController.h CommunicationController/Tcp/ClientSocket.h CommunicationController/TcpController.h MessageGenerator/MessageGenerator.h MessageGenerator/ServerMessage.h WorldModel/Object.h WorldModel/WorldModel.h WorldModel/Field.h Connection/Connection.h Utilities/CString.h Utilities/SwarmException.h Utilities/General.h Model/attribute.h Model/behavior.h Model/model.h Geom/Vector3D.h Geom/Geometry.h GIS/GISServer.h GIS/MapSetParser.h GIS/GISUtility.h GIS/GISServer.h GIS/GIS.h GIS/DBServer.h GIS/StandardsParser.h release/objects/Server1.0.0/ && $(COPY_FILE) --parents main.cpp ObjectManager/ObjectManager.cpp ObjectManager/ObjectParameters.cpp MessageGenerator/MessageGenerator.cpp MessageGenerator/ServerMessage.cpp Parser/Command.cpp Kernel/Kernel.cpp Model/attribute.cpp Model/behavior.cpp Model/model.cpp CommunicationController/Tcp/ClientSocket.cpp CommunicationController/TcpController.cpp WorldModel/Object.cpp WorldModel/WorldModel.cpp Connection/Connection.cpp WorldModel/Field.cpp Utilities/CString.cpp Utilities/SwarmException.cpp Utilities/General.cpp Geom/Vector3D.cpp Geom/Geometry.cpp GIS/MapSetParser.cpp GIS/GISServer.cpp GIS/DBServer.cpp GIS/StandardsParser.cpp release/objects/Server1.0.0/ && (cd `dirname release/objects/Server1.0.0` && $(TAR) Server1.0.0.tar Server1.0.0 && $(COMPRESS) Server1.0.0.tar) && $(MOVE) `dirname release/objects/Server1.0.0`/Server1.0.0.tar.gz . && $(DEL_FILE) -r release/objects/Server1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) CommandParser_yacc.h
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_bison_make_all: release/yacc_lex/CommandParser_yacc.cpp
compiler_bison_clean:
	-$(DEL_FILE) release/yacc_lex/CommandParser_yacc.cpp
release/yacc_lex/CommandParser_yacc.cpp: Parser/CommandParser.y
	bison --defines=release/yacc_lex/CommandParser_yacc.h -o release/yacc_lex/CommandParser_yacc.cpp Parser/CommandParser.y

compiler_flex_make_all: release/yacc_lex/CommandParser_lex.cpp
compiler_flex_clean:
	-$(DEL_FILE) release/yacc_lex/CommandParser_lex.cpp
release/yacc_lex/CommandParser_lex.cpp: Parser/CommandParser.l
	flex -i -orelease/yacc_lex/CommandParser_lex.cpp Parser/CommandParser.l

compiler_moc_header_make_all: release/moc/moc_Kernel.cpp release/moc/moc_CommunicationController.cpp release/moc/moc_ClientSocket.cpp release/moc/moc_TcpController.cpp release/moc/moc_Connection.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc/moc_Kernel.cpp release/moc/moc_CommunicationController.cpp release/moc/moc_ClientSocket.cpp release/moc/moc_TcpController.cpp release/moc/moc_Connection.cpp
release/moc/moc_Kernel.cpp: CommunicationController/CommunicationController.h \
		MessageGenerator/MessageGenerator.h \
		ObjectManager/ObjectManager.h \
		WorldModel/WorldModel.h \
		WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		Model/model.h \
		Model/behavior.h \
		Model/attribute.h \
		WorldModel/Field.h \
		GIS/DBServer.h \
		GIS/GISServer.h \
		GIS/MapSetParser.h \
		GIS/GISUtility.h \
		Kernel/Kernel.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Kernel/Kernel.h -o release/moc/moc_Kernel.cpp

release/moc/moc_CommunicationController.cpp: CommunicationController/CommunicationController.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) CommunicationController/CommunicationController.h -o release/moc/moc_CommunicationController.cpp

release/moc/moc_ClientSocket.cpp: CommunicationController/Tcp/ClientSocket.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) CommunicationController/Tcp/ClientSocket.h -o release/moc/moc_ClientSocket.cpp

release/moc/moc_TcpController.cpp: CommunicationController/CommunicationController.h \
		CommunicationController/Tcp/ClientSocket.h \
		CommunicationController/TcpController.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) CommunicationController/TcpController.h -o release/moc/moc_TcpController.cpp

release/moc/moc_Connection.cpp: Connection/Connection.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Connection/Connection.h -o release/moc/moc_Connection.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_bison_clean compiler_flex_clean compiler_moc_header_clean 

####### Compile

release/objects/main.o: main.cpp Utilities/SwarmException.h \
		Kernel/Kernel.h \
		CommunicationController/CommunicationController.h \
		MessageGenerator/MessageGenerator.h \
		ObjectManager/ObjectManager.h \
		WorldModel/WorldModel.h \
		WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		Model/model.h \
		Model/behavior.h \
		Model/attribute.h \
		WorldModel/Field.h \
		GIS/DBServer.h \
		GIS/GISServer.h \
		GIS/MapSetParser.h \
		GIS/GISUtility.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/main.o main.cpp

release/objects/ObjectManager.o: ObjectManager/ObjectManager.cpp ObjectManager/ObjectManager.h \
		WorldModel/WorldModel.h \
		WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		Model/model.h \
		Model/behavior.h \
		Model/attribute.h \
		WorldModel/Field.h \
		GIS/DBServer.h \
		GIS/GISServer.h \
		GIS/MapSetParser.h \
		GIS/GISUtility.h \
		ObjectManager/ObjectParameters.h \
		MessageGenerator/ServerMessage.h \
		Utilities/SwarmException.h \
		Utilities/General.h \
		Parser/Command.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/ObjectManager.o ObjectManager/ObjectManager.cpp

release/objects/ObjectParameters.o: ObjectManager/ObjectParameters.cpp ObjectManager/ObjectParameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/ObjectParameters.o ObjectManager/ObjectParameters.cpp

release/objects/MessageGenerator.o: MessageGenerator/MessageGenerator.cpp MessageGenerator/MessageGenerator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/MessageGenerator.o MessageGenerator/MessageGenerator.cpp

release/objects/ServerMessage.o: MessageGenerator/ServerMessage.cpp MessageGenerator/ServerMessage.h \
		Model/model.h \
		Model/behavior.h \
		Model/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/ServerMessage.o MessageGenerator/ServerMessage.cpp

release/objects/Command.o: Parser/Command.cpp Parser/Command.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Command.o Parser/Command.cpp

release/objects/Kernel.o: Kernel/Kernel.cpp Kernel/Kernel.h \
		CommunicationController/CommunicationController.h \
		MessageGenerator/MessageGenerator.h \
		ObjectManager/ObjectManager.h \
		WorldModel/WorldModel.h \
		WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		Model/model.h \
		Model/behavior.h \
		Model/attribute.h \
		WorldModel/Field.h \
		GIS/DBServer.h \
		GIS/GISServer.h \
		GIS/MapSetParser.h \
		GIS/GISUtility.h \
		Parser/CommandParser.h \
		Parser/Command.h \
		MessageGenerator/ServerMessage.h \
		CommunicationController/TcpController.h \
		CommunicationController/Tcp/ClientSocket.h \
		ObjectManager/ObjectParameters.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Kernel.o Kernel/Kernel.cpp

release/objects/attribute.o: Model/attribute.cpp Model/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/attribute.o Model/attribute.cpp

release/objects/behavior.o: Model/behavior.cpp Model/behavior.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/behavior.o Model/behavior.cpp

release/objects/model.o: Model/model.cpp Model/model.h \
		Model/behavior.h \
		Model/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/model.o Model/model.cpp

release/objects/ClientSocket.o: CommunicationController/Tcp/ClientSocket.cpp CommunicationController/Tcp/ClientSocket.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/ClientSocket.o CommunicationController/Tcp/ClientSocket.cpp

release/objects/TcpController.o: CommunicationController/TcpController.cpp CommunicationController/TcpController.h \
		CommunicationController/CommunicationController.h \
		CommunicationController/Tcp/ClientSocket.h \
		Utilities/SwarmException.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/TcpController.o CommunicationController/TcpController.cpp

release/objects/Object.o: WorldModel/Object.cpp WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		Model/model.h \
		Model/behavior.h \
		Model/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Object.o WorldModel/Object.cpp

release/objects/WorldModel.o: WorldModel/WorldModel.cpp WorldModel/WorldModel.h \
		WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		Model/model.h \
		Model/behavior.h \
		Model/attribute.h \
		WorldModel/Field.h \
		Utilities/SwarmException.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/WorldModel.o WorldModel/WorldModel.cpp

release/objects/Connection.o: Connection/Connection.cpp Connection/Connection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Connection.o Connection/Connection.cpp

release/objects/Field.o: WorldModel/Field.cpp WorldModel/Field.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Field.o WorldModel/Field.cpp

release/objects/CString.o: Utilities/CString.cpp Utilities/CString.h \
		Utilities/SwarmException.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/CString.o Utilities/CString.cpp

release/objects/SwarmException.o: Utilities/SwarmException.cpp Utilities/SwarmException.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/SwarmException.o Utilities/SwarmException.cpp

release/objects/General.o: Utilities/General.cpp Utilities/General.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/General.o Utilities/General.cpp

release/objects/Vector3D.o: Geom/Vector3D.cpp Geom/Vector3D.h \
		Geom/Comp_Geom.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Vector3D.o Geom/Vector3D.cpp

release/objects/Geometry.o: Geom/Geometry.cpp Geom/Geometry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Geometry.o Geom/Geometry.cpp

release/objects/MapSetParser.o: GIS/MapSetParser.cpp GIS/MapSetParser.h \
		GIS/GISServer.h \
		GIS/DBServer.h \
		GIS/GISUtility.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/MapSetParser.o GIS/MapSetParser.cpp

release/objects/GISServer.o: GIS/GISServer.cpp GIS/GISServer.h \
		GIS/DBServer.h \
		GIS/MapSetParser.h \
		GIS/GISUtility.h \
		GIS/StandardsParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/GISServer.o GIS/GISServer.cpp

release/objects/DBServer.o: GIS/DBServer.cpp GIS/DBServer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/DBServer.o GIS/DBServer.cpp

release/objects/StandardsParser.o: GIS/StandardsParser.cpp GIS/StandardsParser.h \
		GIS/GISServer.h \
		GIS/DBServer.h \
		GIS/GISUtility.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/StandardsParser.o GIS/StandardsParser.cpp

release/objects/CommandParser_yacc.o: release/yacc_lex/CommandParser_yacc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/CommandParser_yacc.o release/yacc_lex/CommandParser_yacc.cpp

release/objects/CommandParser_lex.o: release/yacc_lex/CommandParser_lex.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/CommandParser_lex.o release/yacc_lex/CommandParser_lex.cpp

release/objects/moc_Kernel.o: release/moc/moc_Kernel.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/moc_Kernel.o release/moc/moc_Kernel.cpp

release/objects/moc_CommunicationController.o: release/moc/moc_CommunicationController.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/moc_CommunicationController.o release/moc/moc_CommunicationController.cpp

release/objects/moc_ClientSocket.o: release/moc/moc_ClientSocket.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/moc_ClientSocket.o release/moc/moc_ClientSocket.cpp

release/objects/moc_TcpController.o: release/moc/moc_TcpController.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/moc_TcpController.o release/moc/moc_TcpController.cpp

release/objects/moc_Connection.o: release/moc/moc_Connection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/moc_Connection.o release/moc/moc_Connection.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

