#############################################################################
# Makefile for building: Agent
# Generated by qmake (2.01a) (Qt 4.7.2) on: Tue May 15 15:52:52 2012
# Project:  Agent.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile Agent.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -IParser -IConfigParser -IWorldModel -IUtilities -Irelease/moc
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = release/objects/

####### Files

SOURCES       = main.cpp \
		Parser/Message.cpp \
		Utilities/CString.cpp \
		Utilities/SwarmException.cpp \
		Utilities/General.cpp \
		Logger/Logger.cpp \
		WorldModel/Object.cpp \
		WorldModel/WorldModel.cpp \
		WorldModel/Field.cpp \
		MessageGenerator/MessageGenerator.cpp \
		Action/Action.cpp \
		Geom/Vector3D.cpp \
		Geom/Comp_Geom.cpp \
		Connection/Connection.cpp \
		Base/Agent.cpp \
		Model/attribute.cpp \
		Model/model.cpp \
		Model/behavior.cpp release/yacc_lex/MessageParser_yacc.cpp \
		release/yacc_lex/MessageParser_lex.cpp \
		release/moc/moc_Connection.cpp \
		release/moc/moc_Agent.cpp
OBJECTS       = release/objects/main.o \
		release/objects/Message.o \
		release/objects/CString.o \
		release/objects/SwarmException.o \
		release/objects/General.o \
		release/objects/Logger.o \
		release/objects/Object.o \
		release/objects/WorldModel.o \
		release/objects/Field.o \
		release/objects/MessageGenerator.o \
		release/objects/Action.o \
		release/objects/Vector3D.o \
		release/objects/Comp_Geom.o \
		release/objects/Connection.o \
		release/objects/Agent.o \
		release/objects/attribute.o \
		release/objects/model.o \
		release/objects/behavior.o \
		release/objects/MessageParser_yacc.o \
		release/objects/MessageParser_lex.o \
		release/objects/moc_Connection.o \
		release/objects/moc_Agent.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		Agent.pro
QMAKE_TARGET  = Agent
DESTDIR       = 
TARGET        = Agent

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Agent.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtNetwork.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile Agent.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtNetwork.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile Agent.pro

dist: 
	@$(CHK_DIR_EXISTS) release/objects/Agent1.0.0 || $(MKDIR) release/objects/Agent1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) release/objects/Agent1.0.0/ && $(COPY_FILE) --parents Parser/MessageParser.y release/objects/Agent1.0.0/ && $(COPY_FILE) --parents Parser/MessageParser.l release/objects/Agent1.0.0/ && $(COPY_FILE) --parents Parser/Message.h Parser/MessageParser.h Utilities/CString.h Utilities/SwarmException.h Utilities/General.h Logger/Logger.h WorldModel/Object.h WorldModel/WorldModel.h WorldModel/Field.h MessageGenerator/MessageGenerator.h Action/Action.h Geom/Vector3D.h Geom/Comp_Geom.h Connection/Connection.h Base/Agent.h Model/model.h Model/attribute.h Model/behavior.h release/objects/Agent1.0.0/ && $(COPY_FILE) --parents main.cpp Parser/Message.cpp Utilities/CString.cpp Utilities/SwarmException.cpp Utilities/General.cpp Logger/Logger.cpp WorldModel/Object.cpp WorldModel/WorldModel.cpp WorldModel/Field.cpp MessageGenerator/MessageGenerator.cpp Action/Action.cpp Geom/Vector3D.cpp Geom/Comp_Geom.cpp Connection/Connection.cpp Base/Agent.cpp Model/attribute.cpp Model/model.cpp Model/behavior.cpp release/objects/Agent1.0.0/ && (cd `dirname release/objects/Agent1.0.0` && $(TAR) Agent1.0.0.tar Agent1.0.0 && $(COMPRESS) Agent1.0.0.tar) && $(MOVE) `dirname release/objects/Agent1.0.0`/Agent1.0.0.tar.gz . && $(DEL_FILE) -r release/objects/Agent1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) MessageParser_yacc.h
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_bison_make_all: release/yacc_lex/MessageParser_yacc.cpp
compiler_bison_clean:
	-$(DEL_FILE) release/yacc_lex/MessageParser_yacc.cpp
release/yacc_lex/MessageParser_yacc.cpp: Parser/MessageParser.y
	bison --defines=release/yacc_lex/MessageParser_yacc.h -o release/yacc_lex/MessageParser_yacc.cpp Parser/MessageParser.y

compiler_flex_make_all: release/yacc_lex/MessageParser_lex.cpp
compiler_flex_clean:
	-$(DEL_FILE) release/yacc_lex/MessageParser_lex.cpp
release/yacc_lex/MessageParser_lex.cpp: Parser/MessageParser.l
	flex -i -orelease/yacc_lex/MessageParser_lex.cpp Parser/MessageParser.l

compiler_moc_header_make_all: release/moc/moc_Connection.cpp release/moc/moc_Agent.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc/moc_Connection.cpp release/moc/moc_Agent.cpp
release/moc/moc_Connection.cpp: Connection/Connection.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Connection/Connection.h -o release/moc/moc_Connection.cpp

release/moc/moc_Agent.cpp: Geom/Vector.h \
		Action/Action.h \
		WorldModel/WorldModel.h \
		WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		WorldModel/Field.h \
		Connection/Connection.h \
		MessageGenerator/MessageGenerator.h \
		Model/model.h \
		Model/behavior.h \
		Model/attribute.h \
		Base/Agent.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) Base/Agent.h -o release/moc/moc_Agent.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: release/ui/qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) release/ui/qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_bison_clean compiler_flex_clean compiler_moc_header_clean 

####### Compile

release/objects/main.o: main.cpp WorldModel/WorldModel.h \
		WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		WorldModel/Field.h \
		Connection/Connection.h \
		Base/Agent.h \
		Geom/Vector.h \
		Action/Action.h \
		MessageGenerator/MessageGenerator.h \
		Model/model.h \
		Model/behavior.h \
		Model/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/main.o main.cpp

release/objects/Message.o: Parser/Message.cpp Parser/Message.h \
		WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		Utilities/SwarmException.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Message.o Parser/Message.cpp

release/objects/CString.o: Utilities/CString.cpp Utilities/CString.h \
		Utilities/SwarmException.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/CString.o Utilities/CString.cpp

release/objects/SwarmException.o: Utilities/SwarmException.cpp Utilities/SwarmException.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/SwarmException.o Utilities/SwarmException.cpp

release/objects/General.o: Utilities/General.cpp Utilities/General.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/General.o Utilities/General.cpp

release/objects/Logger.o: Logger/Logger.cpp Logger/Logger.h \
		Utilities/SwarmException.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Logger.o Logger/Logger.cpp

release/objects/Object.o: WorldModel/Object.cpp WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Object.o WorldModel/Object.cpp

release/objects/WorldModel.o: WorldModel/WorldModel.cpp WorldModel/WorldModel.h \
		WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		WorldModel/Field.h \
		Utilities/SwarmException.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/WorldModel.o WorldModel/WorldModel.cpp

release/objects/Field.o: WorldModel/Field.cpp WorldModel/Field.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Field.o WorldModel/Field.cpp

release/objects/MessageGenerator.o: MessageGenerator/MessageGenerator.cpp MessageGenerator/MessageGenerator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/MessageGenerator.o MessageGenerator/MessageGenerator.cpp

release/objects/Action.o: Action/Action.cpp Action/Action.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Action.o Action/Action.cpp

release/objects/Vector3D.o: Geom/Vector3D.cpp Geom/Vector3D.h \
		Geom/Comp_Geom.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Vector3D.o Geom/Vector3D.cpp

release/objects/Comp_Geom.o: Geom/Comp_Geom.cpp Geom/Comp_Geom.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Comp_Geom.o Geom/Comp_Geom.cpp

release/objects/Connection.o: Connection/Connection.cpp Connection/Connection.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Connection.o Connection/Connection.cpp

release/objects/Agent.o: Base/Agent.cpp Base/Agent.h \
		Geom/Vector.h \
		Action/Action.h \
		WorldModel/WorldModel.h \
		WorldModel/Object.h \
		Geom/Vector3D.h \
		Geom/Comp_Geom.h \
		WorldModel/Field.h \
		Connection/Connection.h \
		MessageGenerator/MessageGenerator.h \
		Model/model.h \
		Model/behavior.h \
		Model/attribute.h \
		Utilities/General.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/Agent.o Base/Agent.cpp

release/objects/attribute.o: Model/attribute.cpp Model/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/attribute.o Model/attribute.cpp

release/objects/model.o: Model/model.cpp Model/model.h \
		Model/behavior.h \
		Model/attribute.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/model.o Model/model.cpp

release/objects/behavior.o: Model/behavior.cpp Model/behavior.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/behavior.o Model/behavior.cpp

release/objects/MessageParser_yacc.o: release/yacc_lex/MessageParser_yacc.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/MessageParser_yacc.o release/yacc_lex/MessageParser_yacc.cpp

release/objects/MessageParser_lex.o: release/yacc_lex/MessageParser_lex.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/MessageParser_lex.o release/yacc_lex/MessageParser_lex.cpp

release/objects/moc_Connection.o: release/moc/moc_Connection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/moc_Connection.o release/moc/moc_Connection.cpp

release/objects/moc_Agent.o: release/moc/moc_Agent.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/objects/moc_Agent.o release/moc/moc_Agent.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

